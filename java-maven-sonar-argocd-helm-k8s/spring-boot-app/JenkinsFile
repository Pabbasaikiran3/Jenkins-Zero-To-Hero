pipeline {
    agent {
        docker {
            image 'pabbasaikiran3/maven-pabbasaikiran-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // Mount Docker socket
        }
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out the repository'
                git branch: 'main', url: 'https://github.com/Pabbasaikiran3/Jenkins-Zero-To-Hero.git'
            }
        }

        stage('Build and Test') {
            steps {
                echo 'Building and testing the project'
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
            }
        }
        stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://34.228.176.52:9000/"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "pabbasaikiran3/ultimate-cicd:${BUILD_NUMBER}"
                DOCKERFILE_DIR = "java-maven-sonar-argocd-helm-k8s/spring-boot-app"
                REGISTRY_CREDENTIALS = credentials('docker-credentials-id')
           }
      steps {
        script {
            sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-credentials-id") {
                dockerImage.push()
            }
        }
      }
    }
        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
                GIT_USER_NAME = "pabbasaikiran3"
            }
            steps {
                echo 'Updating deployment file'
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config user.email "pabbasaikiran3@gmail.com"
                        git config user.name "pabbasaikiran3"
                        BUILD_NUMBER=${BUILD_NUMBER}
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }
    }
}
